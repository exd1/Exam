
function[ ]=RK4(x0,xn,y0,h,f)
x=x0:h:xn;
n=length(x)-1;
y(1)=y0;
for i=1:n
k1=f(x(i),y(i));
k2=f(x(i)+h/2,y(i)+h*k1/2);
k3=f(x(i)+h/2,y(i)+h*k2/2);
k4=f(x(i)+h,y(i)+h*k3);
y(i+1)=y(i)+(h/6)*(k1+2*k2+2*k3+k4);
end
fprintf('Approximate solution at x=%f is y=%f \n',xn,y(end))
plot(x,y,'*')
hold on
u=dsolve('Dy=y-x^2+1','y(0)=.5','x');
u=eval(u);
fprintf('The solution obtained using dsolve at x=%f is u=%f \n',xn,u(end))
plot(x,u,'r')
end
>> x0=0;y0=0.5;xn=1;h=0.25;
>> f=@(x,y) y-x^2+1;
>> RK4(x0,xn,y0,h,f)
5. Finite difference method to find numerical solution of Heat equation
function [x, t, u] = FTCS(x0, xm, tn, h, k, c2, f)
    alpha = c2 * k / h^2;
    if alpha > 0.5
        fprintf('The method fails\n');
        x = []; t = []; u = [];
    else
        x = x0:h:xm; m = length(x);
        t = 0:k:tn; n = length(t);
        u = zeros(m, n); u(:, 1) = f(x);
        for j = 1:n-1
            for i = 2:m-1
                u(i, j+1) = alpha * (u(i-1, j) + u(i+1, j)) + (1 - 2 * alpha) * u(i, j);
            end
        end
        surf(t, x, u); xlabel('t'); ylabel('x'); zlabel('u');
    end
end


>> x0=0; xm = 8; tn = 0.5; h = 1; k=1/8; c2=4;
>> f = @(x) 4*x -0.5*x.^2;
>> [x,t,u] = FTCS(x0,xm,tn,h,k,c2,f)
