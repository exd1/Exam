Euler’s Method

function []=Eulermethod(x0,y0,xn,h,f)
x=x0:h:xn;
n=length(x)-1;
y(1)=y0;
for i=1:n
y(i+1)=y(i)+h*f(x(i),y(i));
end
fprintf('Approximate solution at x=%f is y=%f \n',xn,y(end))
plot(x,y,'*')
hold on
u=dsolve('Dy=y-x^2+1','y(0)=.5','x');
u=eval(u);
fprintf('The solution obtained using dsolve at x=%f is u=%f \n',xn,u(end))
plot(x,u,'r')
end

>> x0=0;y0=0.5;xn=1;h=0.25;
>> f=@(x,y) y-x^2+1;
>> Eulermethod(x0,y0,xn,h,f)

2. Euler’s Modified Method
function [] = Eulermod(x0, y0, xn, h, f)
x = x0:h:xn;
n = length(x) - 1;
y(1) = y0;
for i = 1:n
yp(i+1) = y(i) + h * f(x(i), y(i));
y(i+1) = y(i) + h/2 * (f(x(i), y(i)) + f(x(i+1), yp(i+1)));
end
fprintf('Approximate solution at x=%f is y=%f \n', xn, y(end))
plot(x, y, '*')
hold on
u = dsolve('Dy=y-x^2+1', 'y(0)=.5', 'x');
u = eval(u);
fprintf('The solution obtained using dsolve at x=%f is u=%f \n', xn, u(end))
plot(x, u, 'r')
end


>> x0=0;y0=0.5;xn=1;h=0.25;
>> f=@(x,y) y-x^2+1;
>> Eulermod(x0,y0,xn,h,f)
